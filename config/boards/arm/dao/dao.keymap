/*
 * Copyright (c) 2021 Margar Ag
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define NBR 4

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      | ESC   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | TAB   |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LSHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
    &none   &kp ESC   &kp Q       &kp W      &kp E      &kp R      &kp T       &kp Y   &kp U      &kp I       &kp O      &kp P          &kp BSPC &none
            &kp TAB   &mt LCTRL A &mt LALT S &mt LGUI D &mt SHFT F &kp G       &kp H   &mt SHFT J &mt RGUI K  &mt RALT L &mt RCTRL SEMI &kp DQT
            &kp LSHFT &kp Z       &kp X      &kp C      &kp V      &kp B       &kp N   &kp M      &kp COMMA   &kp DOT    &kp FSLH       &kp LBKT
                                  &kp TAB    &kp LSHFT  &lt NBR SPACE          &kp RET &mo LWR    &mo RSE
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans   &trans  &kp N1   &kp N2 &kp N3  &kp N4  &kp N5       &kp N6       &kp N7       &kp N8     &kp N9        &kp N0          &trans       &trans
            &trans  &kp CAPS &trans &trans  &trans  &trans       &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT     &none           &kp C_VOL_UP
            &trans  &kp ESC  &trans &trans  &trans  &trans       &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &kp LC(LG(SPC)) &kp C_VOL_DN
                                    &trans  &trans  &trans       &trans       &trans       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans   &trans  &kp LS(N1) &kp LS(N2) &kp LS(N3)  &kp LS(N4)  &kp LS(N5)       &kp LS(N6)    &kp LS(N7)    &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   &trans    &trans
            &trans  &kp CAPS   &none      &none       &none       &none            &kp MINUS     &kp EQUAL     &kp LBKT     &kp LBRC     &kp BSLH     &kp TILDE
            &trans  &kp ESC    &none      &none       &none       &none            &kp LS(MINUS) &kp LS(EQUAL) &kp LS(LBKT) &kp LS(LBRC) &kp LS(BSLH) &kp LS(TILDE)
                                          &trans      &trans      &trans           &trans        &trans        &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
                number_layer {
                // -----------------------------------------------------------------------------------------
                // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
                //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
                //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
                //                          |     |     |     |   |     |     |     |
                                        bindings = <
                   &none  &none  &kp KP_EQUAL &kp KP_PLUS  &kp N7 &kp N8 &kp N9         &none        &none        &none        &none        &none         &bootloader &reset
                          &none  &kp CAPS     &kp KP_MINUS &kp N4 &kp N5 &kp N6         &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
                          &none  &kp ESC      &kp N0       &kp N1 &kp N2 &kp N3         &none        &none        &none        &none        &none         &none
                                              &trans       &none  &trans                &trans       &trans       &trans
                                        >;
                };
        };
};
